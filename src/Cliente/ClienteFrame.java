/*
 * ClienteFrame.java
 *
 * Created on 28-jun-2011, 18:55:15
 */
package Cliente;

import javax.swing.JOptionPane;

/**
 *
 * @author link
 */
public class ClienteFrame extends javax.swing.JFrame {
    private SocketCliente socketCliente;

    /** Creates new form ClienteFrame */
    public ClienteFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        socketCliente = new SocketCliente("192.168.0.100");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbEjecutar = new javax.swing.JButton();
        jtfSentencia = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtpDatos = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cliente DBDistribuida");
        setResizable(false);

        jbEjecutar.setFont(new java.awt.Font("Arial", 0, 10));
        jbEjecutar.setText("Ejecutar");
        jbEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEjecutarActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(1, 1, 1));

        jtpDatos.setBackground(new java.awt.Color(1, 1, 1));
        jtpDatos.setEditable(false);
        jtpDatos.setForeground(new java.awt.Color(248, 248, 248));
        jtpDatos.setText("Escribe una sintaxis de SQL y presiona ejecutar...");
        jtpDatos.setAutoscrolls(true);
        jScrollPane1.setViewportView(jtpDatos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtfSentencia, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbEjecutar, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbEjecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfSentencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEjecutarActionPerformed
        if(jtfSentencia.getText().equalsIgnoreCase(""))
            JOptionPane.showMessageDialog(this, "No has escrito alguna sentencia.", "Error", JOptionPane.ERROR_MESSAGE);
        else{
            socketCliente.ejecutarConsulta(jtfSentencia.getText(), jtpDatos);
        }
}//GEN-LAST:event_jbEjecutarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ClienteFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbEjecutar;
    private javax.swing.JTextField jtfSentencia;
    private javax.swing.JTextPane jtpDatos;
    // End of variables declaration//GEN-END:variables
}
